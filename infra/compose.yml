version: "3.8"
services:

  nginx:
    image: nginx:latest
    container_name: nginx-gateway
    ports:
      - "80:80"
    depends_on:
      - api-gateway
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bms
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    build:
      context: ..
      dockerfile: api-gateway/Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bms
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DIALECT: postgres

  booking-service:
    build:
      context: ..
      dockerfile: services/booking-service/Dockerfile
    ports:
      - "50051:50051"
    depends_on:
      - postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: bms
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DIALECT: postgres
      
volumes:
  pgdata:
